{"version":3,"file":"ee8b1517-e80411df93143c19efee.js","mappings":"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","sources":["webpack://value-compass/./node_modules/chart.js/dist/chart.js"],"sourcesContent":["/*!\n * Chart.js v4.4.7\n * https://www.chartjs.org\n * (c) 2024 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    let found = false;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            found = true;\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    if (!found && !options.all) {\n        return 0;\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data, meta) {\n    const { iScale , vScale  } = meta;\n    const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n    const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            [iAxisKey]: key,\n            [vAxisKey]: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            const meta = this._cachedMeta;\n            this._data = convertObjectDataToArray(data, meta);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n            meta._stacked = isStacked(meta.vScale, meta);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n        const iScaleValue = currentParsed && currentParsed[iScale.axis];\n        const skipNull = (meta)=>{\n            const parsed = meta._parsed.find((item)=>item[iScale.axis] === iScaleValue);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            return lookupMethod(data, axis, value);\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    if (node) {\n        node.addEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction removeListener(chart, type, listener) {\n    if (chart && chart.canvas) {\n        chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = canvas && _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                    case 'inner':\n                        if (i === ilen - 1) {\n                            left -= width;\n                        } else if (i > 0) {\n                            left -= width / 2;\n                        }\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).some((key)=>isFunction(value[key]));\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.4.7\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resizeBeforeDraw = null;\n            this._resize(width, height);\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta, this.chartArea);\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n        const betweenAngles = _circumference >= TAU || nonZeroBetween;\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nfunction containsDefaultColorsDefenitions() {\n    return defaults.borderColor !== 'rgba(0,0,0,0.1)' || defaults.backgroundColor !== 'rgba(0,0,0,0.1)';\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        const containsColorDefenition = containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements) || containsDefaultColorsDefenitions();\n        if (!options.forceOverride && containsColorDefenition) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let xSet = new Set();\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                xSet.add(pos.x);\n                y += pos.y;\n                ++count;\n            }\n        }\n        if (count === 0 || xSet.size === 0) {\n            return false;\n        }\n        const xAverage = [\n            ...xSet\n        ].reduce((a, b)=>a + b) / xSet.size;\n        return {\n            x: xAverage,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive.filter((i)=>this.chart.data.datasets[i.datasetIndex] && this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined);\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash || []);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0 || index === 0 && this.min < 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && this.min >= 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value,  parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n"],"names":["Animator","constructor","this","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","_refresh","r","call","window","_update","Date","now","remaining","running","items","length","item","i","draw","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","push","add","has","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","animator","transparent","interpolators","boolean","from","to","factor","color","c0","c","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","_fn","_easing","e","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","Animations","config","_chart","_properties","configure","animationOptions","Object","keys","d","animation","animatedProps","getOwnPropertyNames","key","option","properties","_animateOptions","values","newOptions","options","$shared","assign","$animations","resolveTargetOptions","animations","_createAnimations","anim","all","awaitAll","then","props","charAt","value","size","scaleClip","scale","allowedOverflow","opts","reverse","end","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","found","s","isStacked","meta","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","indexScale","valueScale","id","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","scales","filter","shift","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","fill","isPluginEnabled","console","warn","updateIndex","dataset","getDataset","chooseId","x","y","xid","xAxisID","v","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","xScale","getScaleForId","yScale","rScale","data","datasets","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","u","_dataCheck","iAxisKey","vAxisKey","adata","Array","convertObjectDataToArray","isExtensible","l","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","otherMin","otherMax","minDefined","maxDefined","getUserBounds","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","t","b","top","right","bottom","left","disabled","toClip","clip","defaultClip","elements","area","chartArea","drawActiveElementsOnTop","element","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","context","parent","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","cache","cacheKey","sharing","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_sync","args","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","concat","_","sort","a","getAllScaleValues","curr","_length","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","base","borderProps","enableBorderRadius","parseEdge","orig","v1","v2","startEnd","setInflateAmount","inflateAmount","ratio","DoughnutController","animateRotate","animateScale","numbers","cutout","rotation","circumference","radius","spacing","_scriptable","name","_indexable","startsWith","aspectRatio","plugins","legend","generateLabels","pointStyle","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","fontColor","lineWidth","borderWidth","getDataVisibility","onClick","legendItem","toggleDataVisibility","super","innerRadius","outerRadius","offsetX","offsetY","getter","_getRotation","_getCircumference","_getRotationExtents","T","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","width","height","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","calcMin","maxX","maxY","H","minX","P","minY","getRatioAndOffset","maxWidth","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","arc","metaData","isNaN","locale","borderAlign","hoverBorderWidth","offset","hoverOffset","ringWeightOffset","weight","PolarAreaController","angleLines","display","beginAtZero","grid","circular","pointLabels","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","RadarController","showLine","line","points","_fullLoop","point","pointPosition","getPointPositionForValue","skip","controllers","__proto__","BarController","categoryPercentage","barPercentage","grouped","_index_","_value_","obj","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","last","currentParsed","iScaleValue","skipNull","find","val","indexOf","_getStackCount","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","baseValue","minBarLength","actualBase","floating","barSign","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","next","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","BubbleController","iPixel","vPixel","LineController","spanGaps","_dataset","animationsDisabled","_datasetIndex","_decimated","segment","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","PieController","ScatterController","interaction","registry","getElement","abstract","Error","DateAdapterBase","override","members","prototype","init","formats","format","diff","startOf","endOf","adapters","binarySearch","metaset","intersect","lookupMethod","_reversePixels","el","getRange","lo","hi","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","j","getIntersectItems","useFinalPosition","includeInvisible","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getDistanceMetricForAxis","minDistance","getCenterPoint","distance","getNearestItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","setLayoutDims","layouts","params","wrap","stackWeight","includes","_stack","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","w","heightChanged","h","same","other","getMargins","marginForPositions","positions","margin","fitBoxes","boxes","refitBoxes","refit","changed","setBoxDims","placeBoxes","userPadding","padding","addBox","_layers","z","removeBox","layoutItem","minPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","canvas","releaseContext","addEventListener","listener","removeEventListener","getDevicePixelRatio","getMaximumSize","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","passive","removeListener","nodeListContains","nodeList","node","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","document","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","resize","currentDevicePixelRatio","createResizeObserver","container","clientWidth","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","proxy","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","Element","tooltipPosition","hasValue","final","ret","autoSkip","tickOpts","determinedMaxTicks","tickLength","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","major","enabled","result","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","len","getEvenSpacing","factors","calculateSpacing","avgMajorSpacing","round","majorStart","majorEnd","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","getTickMarkLength","drawTicks","getTitleHeight","fallback","font","lineHeight","titleAlign","align","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","setContext","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","margins","grace","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","callback","afterTickToLabelConversion","numTicks","minRotation","maxRotation","tickWidth","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","title","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","mirror","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","jlen","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","string","gc","gcLen","garbageCollect","valueAt","idx","pixel","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","autoSkipPadding","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","borderDash","dash","borderDashOffset","dashOffset","tickColor","tickBorderDash","tickBorderDashOffset","crossAlign","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","labelOffset","halfCount","strokeColor","textStrokeColor","strokeWidth","textStrokeWidth","backdrop","tickTextAlign","showLabelBackdrop","labelPadding","backdropPadding","backdropColor","translation","_computeLabelArea","drawBackground","save","fillRect","restore","findIndex","drawGrid","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","drawOnChartArea","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","scope","create","isForType","isPrototypeOf","register","proto","getPrototypeOf","parentScope","isIChartComponent","itemDefaults","defaults","defaultRoutes","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","route","routeDefaults","descriptors","describe","registerDefaults","overrides","unregister","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","_descriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","local","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","idMatchesAxis","determineAxis","scaleOptions","toLowerCase","getAxisFromDataset","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","_proxy","boundDs","retrieveAxisFromDatasets","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","initOptions","initData","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","resolver","subPrefixes","getResolver","isScriptable","isIndexable","hasFunction","needContext","subResolver","descriptorDefaults","resolverCache","p","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","getSizeForArea","field","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","maintainAspectRatio","responsive","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","slice","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","visible","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","autoPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","events","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","hide","show","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","hover","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","lastEvent","determineLastEvent","onHover","parseBorderRadius$1","angleDelta","o","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","alpha","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","PI","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","closePath","fullCircles","borderJoinStyle","inner","lineJoin","angleMargin","clipArc","setStyle","lineCap","borderCapStyle","previous","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","tension","cubicInterpolationMode","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segments","segmentMethod","strokePathDirect","LineElement","capBezierPoints","_points","_segments","_pointsUpdated","interpolate","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","bounds","maxW","maxH","parseBorderWidth","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","rect","inflateRect","amount","refRect","ArcElement","chartX","chartY","rAdjust","nonZeroBetween","betweenAngles","withinRadius","halfAngle","halfRadius","translate","radiusOffset","drawArc","BarElement","addRectPath","mouseX","mouseY","inXRange","inYRange","PointElement","hoverRadius","BORDER_COLORS","BACKGROUND_COLORS","replace","getBorderColor","getBackgroundColor","getColorizer","colorizeDoughnutDataset","colorizePolarAreaDataset","colorizeDefaultDataset","containsColorsDefinitions","k","plugin_colors","forceOverride","_args","chartOptions","containsColorDefenition","colorizer","cleanDecimatedDataset","defineProperty","configurable","enumerable","writable","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","pointCount","getStartAndCountOfVisiblePointsSimplified","threshold","decimated","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_shouldApplyFill","_resolveTarget","sources","propagate","visited","_decodeFill","fillOption","parseFillOption","parseFloat","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","_getTarget","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_drawfill","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtl","rtlHelper","hitbox","leftForLtr","_draw","defaultColor","halfFontSize","cursor","textDirection","textWidth","setWidth","lineDash","drawOptions","SQRT2","xPlus","yBoxTop","xBoxLeft","drawLegendBox","strikethrough","fillText","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","plugin_subtitle","positioners","average","xSet","eventPosition","nearestElement","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","lines","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","cornerRadius","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","_fallback","Colors","Decimation","Filler","SubTitle","findOrAddLabel","addedLabels","addIfString","lastIndexOf","_getLabelForValue","relativeLabelSize","minSpacing","rad","LinearScaleBase","_startValue","_endValue","_valueRange","isFinite","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","maxTicks","stepSize","computeTickLimit","generationOptions","dataRange","precision","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","decimalPlaces","tickValue","generateTicks$1","LinearScale","formatters","numeric","log10Floor","changeExponent","m","isMajor","tickVal","steps","rangeExp","rangeStep","generateTicks","minExp","exp","startExp","significand","lastTick","LogarithmicScale","logarithmic","_zero","getTickBackdropHeight","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","updateLimits","setCenterPoint","_pointLabelItems","itemOpts","extra","createPointLabelItem","isNotOverlapped","buildPointLabelItems","hLimits","vLimits","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","drawPointLabels","gridLineOpts","drawRadiusLine","rotate","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","minor","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","formatter","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","CategoryScale","_addedLabels","added","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables"],"sourceRoot":""}